name: SQLFluff lint

on:
  pull_request:
    paths:
    - "dbt/plum/models/**"
#    - ".github/workflows/sqlfluff_lint.yml"
    types: [ 'opened', 'edited', 'reopened', 'synchronize' ]

env:
  PYTHON_VERSION: '3.8.12'
  GCP_WORKLOAD_IDENTITY_PROVIDER: projects/237249625410/locations/global/workloadIdentityPools/github-actions/providers/github-actions-provider
  GOOGLE_SERVICE_ACCOUNT: composer-analytics-sync-dags@plum-data-analytics.iam.gserviceaccount.com
  CONFIG_URL: ./dbt/.sqlfluff
  PROFILES_DIR: ./dbt/profiles/
  PROJECT_DIR: ./dbt/plum/

jobs:
  lint-models:
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - name: checkout
        uses: actions/checkout@v3.3.0

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1.0.0
        with:
          workload_identity_provider: ${{ env.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.GOOGLE_SERVICE_ACCOUNT }}

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Cache virtual environment
        uses: actions/cache@v3
        with:
          path: dbt/.venv
          key: venv-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('dbt/poetry.lock') }}
      
      - name: Move poetry files to parent directory
        run: |
          cp dbt/pyproject.toml ../
          cp dbt/poetry.lock ../

      - name: Install dbt dependencies
        run: |
          pip install --upgrade pip
          pip install poetry==1.2.0
          poetry config virtualenvs.in-project true
          poetry install --remove-untracked

      - name: Clean dbt, install deps and compile
        run: |
          echo "Cleaning dbt"
          poetry run dbt clean --profiles-dir dbt/profiles --project-dir dbt/plum
          echo "Debugging dbt deps"
          poetry run dbt debug --profiles-dir dbt/profiles --project-dir dbt/plum
          echo "Compiling dbt"
          poetry run dbt deps --profiles-dir dbt/profiles --project-dir dbt/plum

      - name: Get changed files by PR
        id: changed-files
        uses: tj-actions/changed-files@v35.4.4
        with:
          path: dbt/plum
          files: models/staging/**/*.sql

      - name: List all changed files
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "$file was changed"
          done

      - name:  Lint dbt models
        run: |
          poetry run sqlfluff lint ${{ steps.changed-files.outputs.all_changed_files }} --config ${{env.CONFIG_URL}};